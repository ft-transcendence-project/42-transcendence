# https://docs.docker.com/compose/how-tos/production/
# https://docs.docker.com/compose/how-tos/multiple-compose-files/merge/
# https://docs.docker.com/reference/compose-file/merge/

services:
  account:
    volumes: !reset []
    entrypoint: !override "/usr/src/app/entrypoint.sh"
    environment: !override
      - ENVIRONMENT=production
    development: !reset []
    ports: !reset []
    restart: unless-stopped

  gameplay:
    volumes: !reset []
    entrypoint: !override "/usr/src/app/entrypoint.sh"
    environment: !override
      - ENVIRONMENT=production
    development: !reset []
    ports: !reset []
    restart: unless-stopped

  tournament:
    volumes: !override
      - contract_data:/usr/src/app/build/contracts
    entrypoint: !override "/usr/src/app/entrypoint.sh"
    environment: !override
      - ENVIRONMENT=production
    development: !reset []
    ports: !reset []
    restart: unless-stopped
    depends_on:
      - ganache
      - truffle

  db:
    volumes: !reset []
    restart: unless-stopped

  frontend:
    volumes: !reset []
    environment: !override
      - ACCOUNT_HOST=https://localhost:8443/42pong.api/account
      - GAMEPLAY_HOST=https://localhost:8443/42pong.api/gameplay
      - GAMEPLAY_WS_HOST=wss://localhost:8443/gameplay.ws
      - TOURNAMENT_HOST=https://localhost:8443/42pong.api/tournament
    ports: !reset []
    restart: unless-stopped

  web:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: web
    ports:
      - "8443:443"
    depends_on:
      account:
        condition: service_healthy
      gameplay:
        condition: service_healthy
      frontend:
        condition: service_healthy
    command: ["nginx", "-g", "daemon off;"]
    restart: unless-stopped

include:
  - ./elk/elk-services.yml
  - ./blockchain/blockchain.yml
