# Django(daphne)の8000番ポートとつなぐ
upstream backend {
    # サーバにDjangoのコンテナ名を指定。今回はapp
    # ポートはDjangoのコンテナの8000番ポート
    server backend:8000;
}

upstream gameplay {
    server gameplay:8001;
}

# nodeの3000番ポートとつなぐ
upstream node {
    server frontend:3000;
}

server {
    listen 80;
    server_name 0.0.0.0;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name 0.0.0.0;

    ssl_certificate /etc/ssl/certs/cert.pem;
    ssl_certificate_key /etc/ssl/private/key.pem;

    # プロキシ設定
    # frontendの静的ファイル(HTML、CSS、Javascriptなど)を管理
    location / {
        proxy_pass http://node;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
	}

    # 実際はNginxのコンテナにアクセスしてるのをDjangoにアクセスしてるかのようにみせる
    # backend apiへの直接のアクセス
    location /backend/ {
        rewrite ^/backend/(.*)$ /$1 break;
        proxy_pass http://backend;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location /gameplay/ {
        rewrite ^/gameplay/(.*)$ /$1 break;
        proxy_pass http://gameplay;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    # WebSocketのリバースプロキシ設定
    location /gameplay.ws/ {
        proxy_pass http://gameplay;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
