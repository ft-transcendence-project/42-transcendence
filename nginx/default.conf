upstream node {
    server frontend:3000;
    keepalive 32;  # コネクション維持
}

upstream account {
    server account:8000;
}

upstream gameplay {
    server gameplay:8001;
}

upstream tournament {
    server tournament:8002;
}

limit_req_zone $binary_remote_addr zone=gameplay_limit:10m rate=10r/s;

server {
    listen 80;
    server_name 0.0.0.0;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name 0.0.0.0;

    # SSL設定
    ssl_certificate /etc/ssl/certs/cert.pem;
    ssl_certificate_key /etc/ssl/private/key.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;

    # セキュリティヘッダー
    add_header Strict-Transport-Security "max-age=63072000" always;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Content-Security-Policy "default-src 'self'; img-src 'self' data: https://api.qrserver.com; script-src 'self' https://unpkg.com 'sha256-K9J6OkzyiZvbFPd4FLqW74yy0E3MXksh4f9QuTm62d8=' https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js https://cdn.jsdelivr.net/npm/dompurify@2.3.4/dist/purify.min.js; style-src 'self' 'unsafe-hashes' 'sha256-8B+tcdkobRuT8e1Vz8lQSllCwFP2y3XAiOIVYhAKHmY=' 'sha256-cZPRtTFK2E6h4YB6PAH+VrYZVT6NTjnGbw/1HQ1I1F8=' 'sha256-qjXc+7YSGnKr1Km0HCY2U7FyNxDQ+bBpF28GVU+Jf0M=' 'sha256-gHUxNOIdLxabPp1q34wHHcGo9UZO0Kug0MFXnvzYkoE=' 'sha256-O3a1luGnxHvbpM7tNUNbcAiNEgzcMTmEv6/7J+jhWKo=' 'sha256-ZdHxw9eWtnxUb3mk6tBS+gIiVUPE3pGM470keHPDFlE=' 'sha256-XO/ZW0iAq0ODrMhqzgBfpAnoNhz38oDasXeovFt3gPo=' 'sha256-69FgIKcpTWgbdpebqvwkeWslVHgph7aUjToFY/AVL84=' https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css;" always;


    location / {
        proxy_pass http://node;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
    }

    location /42pong.api/ {
        # APIのレート制限
        limit_req zone=gameplay_limit burst=20 nodelay;

        # CORSの設定
        add_header Access-Control-Allow-Origin '*';
        add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
        add_header Access-Control-Allow-Headers 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

        location ~ ^/42pong\.api/account/(.*)$ {
            proxy_pass http://account/$1$is_args$args; # クエリを保持するように
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
        }

        location ~ ^/42pong\.api/gameplay/(.*)$ {
            proxy_pass http://gameplay/$1;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
        }

        location ~ ^/42pong\.api/tournament/(.*)$ {
            proxy_pass http://tournament/$1;
            proxy_set_header X-Forwarded-Proto https;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_redirect off;
        }
    }

    location /gameplay.ws/ {
        proxy_pass http://gameplay;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocketタイムアウト
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
        proxy_connect_timeout 300s;
    }

    # エラーページ
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}
