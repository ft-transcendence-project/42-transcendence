openapi: 3.0.0
info:
  title: Tournament Management API
  description: |
    Tournament management system API specification
    - Tournament creation and management
    - Match result recording
    - Player information management
  version: 1.0.0

paths:
  /tournament/register:
    post:
      tags:
        - tournament
      summary: Register tournament
      description: Create a tournament with 8 players
      requestBody:
        content:
          application/json:
            schema:
              type: array
              minItems: 8
              maxItems: 8
              items:
                type: string
              example:
                - Player 1
                - Player 2
                - Player 3
                - Player 4
                - Player 5
                - Player 6
                - Player 7
                - Player 8
        required: true
      responses:
        '201':
          description: Tournament created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentDetail'
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Require 8 players
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /tournament/save-data/{pk}:
    get:
      tags:
        - tournament
      summary: Get tournament information
      description: Get tournament information by ID
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tournament information retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TournamentDetail'
        '404':
          description: Tournament not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No tournament found

    put:
      tags:
        - tournament
      summary: Update match results
      description: Update tournament match results and handle tournament progression
      parameters:
        - name: pk
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                currentMatch:
                  $ref: '#/components/schemas/MatchUpdate'
      responses:
        '200':
          description: Match results updated successfully
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Match'
                  - type: object
                    properties:
                      match:
                        $ref: '#/components/schemas/Match'
                      tournament_complete:
                        type: boolean
                      winner:
                        type: string
        '400':
          description: Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No match data provided
        '404':
          description: Match not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Match not found
        '500':
          description: Blockchain recording error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: An error occurred while recording match on blockchain

components:
  schemas:
    Tournament:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: Tournament 2024-01-17 15:30
        date:
          type: string
          format: date
          example: 2024-01-17
        is_over:
          type: boolean
        winner:
          $ref: '#/components/schemas/Player'
          nullable: true

    Player:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
          example: Player 1

    Match:
      type: object
      properties:
        id:
          type: integer
        tournament:
          $ref: '#/components/schemas/Tournament'
        match_number:
          type: integer
          minimum: 1
          example: 1
        round:
          type: integer
          minimum: 1
          example: 1
        timestamp:
          type: string
          format: date-time
        player1:
          $ref: '#/components/schemas/Player'
        player2:
          $ref: '#/components/schemas/Player'
        player1_score:
          type: integer
          minimum: 0
          example: 0
        player2_score:
          type: integer
          minimum: 0
          example: 0
        winner:
          $ref: '#/components/schemas/Player'
          nullable: true

    MatchUpdate:
      type: object
      properties:
        match_number:
          type: integer
          minimum: 1
        round:
          type: integer
          minimum: 1
        player1_score:
          type: integer
          minimum: 0
        player2_score:
          type: integer
          minimum: 0
        winner:
          type: string
          enum: [player1, player2]
        player1:
          type: object
          properties:
            id:
              type: integer
        player2:
          type: object
          properties:
            id:
              type: integer

    TournamentDetail:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        date:
          type: string
          format: date
        matches:
          type: array
          items:
            $ref: '#/components/schemas/Match'
