openapi: 3.0.0
info:
  title: Pong Logic API
  version: 1.0.0
  description: Pongロジックとの通信を行うRESTful APIです。

servers:
  - url: https://localhost:8443
    description: Production server

paths:
  /gameplay/{settingId}:
    parameters:
      - name: settingId
        in: path
        required: true
        description: Game setting ID
        schema:
          type: string
          default: '1'
    
    post:
      summary: パドルの移動指示を送信
      operationId: sendPaddleInstruction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaddleInstruction'
      responses:
        '200':
          description: 成功
        '400':
          description: 不正なリクエスト
    
    get:
      summary: 現在のゲーム状態を取得
      operationId: getPongData
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PongData'

  /gameplay/{settingId}/status:
    parameters:
      - name: settingId
        in: path
        required: true
        description: Game setting ID
        schema:
          type: string
    get:
      summary: ゲームの状態（終了状態など）を取得
      operationId: getGameStatus
      responses:
        '200':
          description: 成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameOver'

components:
  schemas:
    PaddleInstruction:
      type: object
      required:
        - side
        - move_direction
        - action
      properties:
        side:
          type: string
          enum:
            - left
            - right
        move_direction:
          type: string
          enum:
            - up
            - down
        action:
          type: string
          enum:
            - start
            - stop

    PongData:
      type: object
      properties:
        id:
          type: integer
          description: このponglogicが使用しているGamesettingのid
        left_paddle_y:
          type: integer
          description: 左パドルのy座標
        right_paddle_y:
          type: integer
          description: 右パドルのy座標
        ball_x:
          type: integer
          description: ボールのx座標
        ball_y:
          type: integer
          description: ボールのy座標
        ball_radius:
          type: integer
          description: ボールの半径
        left_score:
          type: integer
          description: 左プレイヤーの得点
        right_score:
          type: integer
          description: 右プレイヤーの得点
        obstacle1_x:
          type: integer
          description: 障害物1のx座標 (初回のみ)
        obstacle1_y:
          type: integer
          description: 障害物1のy座標 (初回のみ)
        obstacle1_width:
          type: integer
          description: 障害物1の幅 (初回のみ)
        obstacle1_height:
          type: integer
          description: 障害物1の高さ (初回のみ)
        obstacle2_x:
          type: integer
          description: 障害物2のx座標 (初回のみ)
        obstacle2_y:
          type: integer
          description: 障害物2のy座標 (初回のみ)
        obstacle2_width:
          type: integer
          description: 障害物2の幅 (初回のみ)
        obstacle2_height:
          type: integer
          description: 障害物2の高さ (初回のみ)
        blind_x:
          type: integer
          description: ボール隠しのx座標 (初回のみ)
        blind_y:
          type: integer
          description: ボール隠しのy座標 (初回のみ)
        blind_width:
          type: integer
          description: ボール隠しの幅 (初回のみ)
        blind_height:
          type: integer
          description: ボール隠しの高さ (初回のみ)

    GameOver:
      type: object
      properties:
        type:
          type: string
          enum:
            - game_over
          description: このmessageのタイプ
        winner:
          type: string
          description: 勝者の名前
        left_score:
          type: integer
          description: 左プレイヤーの得点
        right_score:
          type: integer
          description: 右プレイヤーの得点
