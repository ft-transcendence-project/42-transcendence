asyncapi: 3.0.0
info:
  title: Pong Logic API
  version: 1.0.0
  description: Websocketを用いてPongロジックとのリアルタイム通信を行うAPIです。
  license:
    name: MIT
servers:
  production:
    host: localhost:8443
    protocol: wss
    description: Production server
    pathname: /gameplay.ws/ponglogic/{settingId}
    variables:
      settingId:
        description: Game setting ID
        schema:
          type: string
        default: '1'

channels:
  game:
    description: Channel for game events
    bindings:
      ws:
        bindingVersion: '0.1.0'
    messages:
      paddleInstruction:
        $ref: '#/components/messages/paddleInstruction'
      gameData:
        $ref: '#/components/messages/gameData'
      gameOver:
        $ref: '#/components/messages/gameOver'

operations:
  receivePaddleInstruction:
    action: receive
    summary: Receive paddle movement instruction
    description: パドルの移動指示を受け取ります
    channel:
      $ref: '#/channels/game'
    messages:
      - $ref: '#/components/messages/paddleInstruction'
    bindings:
      ws:
        bindingVersion: '0.1.0'
  
  sendGameData:
    action: send
    summary: Send game state data
    description: ゲームの状態データを送信します
    channel:
      $ref: '#/channels/game'
    messages:
      - $ref: '#/components/messages/gameData'
  
  sendGameOver:
    action: send
    summary: Send game over status
    description: ゲーム終了状態を送信します
    channel:
      $ref: '#/channels/game'
    messages:
      - $ref: '#/components/messages/gameOver'

components:
  messages:
    paddleInstruction:
      name: paddleInstruction
      title: Paddle Movement Instruction
      summary: パドル移動指示
      description: パドルに対する指示を受け取るメッセージ
      contentType: application/json
      payload:
        $ref: '#/components/schemas/PaddleInstruction'

    gameData:
      name: gameData
      title: Game State Data
      summary: ゲーム状態データ
      description: Pongのデータを送信するメッセージ
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GameState'

    gameOver:
      name: gameOver
      title: Game Over Status
      summary: ゲーム終了状態
      description: ゲームの終了報告を送信するメッセージ
      contentType: application/json
      payload:
        $ref: '#/components/schemas/GameOver'

  schemas:
    PaddleInstruction:
      type: object
      required:
        - side
        - move_direction
        - action
      properties:
        side:
          type: string
          enum:
            - left
            - right
          description: パドルの側面
        move_direction:
          type: string
          enum:
            - up
            - down
          description: 移動方向
        action:
          type: string
          enum:
            - start
            - stop
          description: アクション種別

    GameState:
      type: object
      required:
        - id
        - left_paddle_y
        - right_paddle_y
        - ball_x
        - ball_y
        - ball_radius
        - left_score
        - right_score
      properties:
        id:
          type: integer
          description: このponglogicが使用しているGamesettingのid
        left_paddle_y:
          type: integer
          description: 左パドルのy座標
        right_paddle_y:
          type: integer
          description: 右パドルのy座標
        ball_x:
          type: integer
          description: ボールのx座標
        ball_y:
          type: integer
          description: ボールのy座標
        ball_radius:
          type: integer
          description: ボールの半径
        left_score:
          type: integer
          description: 左プレイヤーの得点
        right_score:
          type: integer
          description: 右プレイヤーの得点
        obstacle1_x:
          type: integer
          description: 障害物1のx座標 (初回のみ)
        obstacle1_y:
          type: integer
          description: 障害物1のy座標 (初回のみ)
        obstacle1_width:
          type: integer
          description: 障害物1の幅 (初回のみ)
        obstacle1_height:
          type: integer
          description: 障害物1の高さ (初回のみ)
        obstacle2_x:
          type: integer
          description: 障害物2のx座標 (初回のみ)
        obstacle2_y:
          type: integer
          description: 障害物2のy座標 (初回のみ)
        obstacle2_width:
          type: integer
          description: 障害物2の幅 (初回のみ)
        obstacle2_height:
          type: integer
          description: 障害物2の高さ (初回のみ)
        blind_x:
          type: integer
          description: ボール隠しのx座標 (初回のみ)
        blind_y:
          type: integer
          description: ボール隠しのy座標 (初回のみ)
        blind_width:
          type: integer
          description: ボール隠しの幅 (初回のみ)
        blind_height:
          type: integer
          description: ボール隠しの高さ (初回のみ)

    GameOver:
      type: object
      required:
        - type
        - winner
        - left_score
        - right_score
      properties:
        type:
          type: string
          enum:
            - game_over
          description: このmessageのタイプ
        winner:
          type: string
          description: 勝者の名前
        left_score:
          type: integer
          description: 左プレイヤーの得点
        right_score:
          type: integer
          description: 右プレイヤーの得点
