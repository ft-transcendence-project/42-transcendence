services:
  web:
    build: ./web
    container_name: web
    command:
      - /bin/sh
      - -c
      - |
        python3 web/manage.py makemigrations &&
        python3 web/manage.py migrate &&
        python3 web/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/usr/src/app
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file: .env
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "dbuser", "-d", "djangodb" ]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  setup_elk:
    extends:
      file: ./elk/elk-services.yml
      service: setup_elk

  es01:
    depends_on:
      setup_elk:
        condition: service_healthy
    extends:
      file: ./elk/elk-services.yml
      service: es01

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    extends:
      file: ./elk/elk-services.yml
      service: kibana

  logstash01:
    depends_on:
      es01:
        condition: service_healthy
      kibana:
        condition: service_healthy
    extends:
      file: ./elk/elk-services.yml
      service: logstash01

  ganache:
    image: trufflesuite/ganache-cli:latest
    container_name: ganache
    ports:
      - "8545:8545"
    volumes:
      - ./ganache-data:/data
    command: ["ganache-cli", "--host", "0.0.0.0", "--db", "/data"]
    healthcheck:
      test: ["CMD", "wget", "--spider", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - blockchain_net

  truffle:
    build:
      context: ./blockchain
    container_name: truffle
    volumes:
      - ./blockchain:/app
    working_dir: /app
    command: sh -c "truffle migrate --network development && tail -f /dev/null"
    depends_on:
      ganache:
        condition: service_healthy
    networks:
      - blockchain_net

networks:
  blockchain_net:

volumes:
  certs:
    driver: local
