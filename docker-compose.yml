services:
  web:
    build: ./web
    container_name: web
    command: >
      sh -c "web/wait-for-it.sh db:5432 -- python3 web/manage.py makemigrations && python3 web/manage.py migrate && python3 web/manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/usr/src/app
    env_file: .env
    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file: .env

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    labels:
      co.elastic.logs/module: elasticsearch
    ports:
      - ${ES_PORT}:9200
    environment:
      - node.name=es01
      - cluster.name=${CLUSTER_NAME}
      - discovery.type=single-node
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      # test: [ "CMD-SHELL", "curl https://localhost:9200 | grep -q 'You Know, for Search'" ]
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    depends_on:
      es01:
        condition: service_healthy
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    labels:
      co.elastic.logs/module: kibana
    ports:
      - ${KIBANA_PORT}:5601
    environment:
      - SERVERNAME=kibana
      - ELASTICSEARCH_HOSTS=http://es01:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=${KIBANA_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "exit 0" ]
      interval: 10s
      timeout: 10s
      retries: 120

  logstash01:
    depends_on:
      es01:
        condition: service_healthy
      kibana:
        condition: service_healthy
    image: docker.elastic.co/logstash/logstash:${STACK_VERSION}
    labels:
      co.elastic.logs/module: logstash
    user: root
    volumes:
      - "./logstash_ingest_data/:/usr/share/logstash/ingest_data/"
      - "./logstash.conf:/usr/share/logstash/pipeline/logstash.conf:ro"
    environment:
      - xpack.monitoring.enabled=false
      # - ELASTIC_USER=elastic
      # - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
      - ELASTIC_HOSTS=http://es01:9200
    ports:
      - "9600:9600"
      - "5959:5959"
