services:
  backend:
    build: ./backend
    container_name: backend
    entrypoint: "backend/entrypoint.sh"
    volumes:
      - .:/usr/src/app
    env_file: .env
    environment:
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./backend/requirements.txt
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:8000/health/"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  gameplay:
    build: ./gameplay
    container_name: gameplay
    entrypoint: "gameplay/entrypoint.sh"
    volumes:
      - .:/usr/src/app
    env_file: .env
    environment:
      - ENVIRONMENT=development
    ports:
      - "8001:8001"
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    develop:
      watch:
        - action: rebuild
          path: ./gameplay/requirements.txt
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost:8001/health/"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  db:
    image: postgres
    container_name: db
    volumes:
      - ./data/db:/var/lib/postgresql/data
    env_file: .env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "dbuser", "-d", "djangodb"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  frontend:
    image: node:latest
    container_name: frontend
    working_dir: /usr/src/frontend
    command: /bin/sh -c "npm install && npm run server"
    volumes:
      - ./frontend:/usr/src/frontend
    environment:
      - BACKEND_HOST=http://localhost:8000
      - GAMEPLAY_HOST=http://localhost:8001
      - GAMEPLAY_WS_HOST=ws://localhost:8001/gameplay.ws
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

  redis:
    image: redis
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "localhost", "ping"]
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 30s

include:
  - ./blockchain/blockchain.yml

